package traceID

import (
	"bytes"
	"testing"
)

func TestEndec(t *testing.T) {
	var encoded = []byte{
		1, 0, 16, 0, 72, 56, 98, 113, 99, 52, 113, 71, 87, 113, 101, 52, 50, 109, 98, 51, 0, 200, 15, 95, 163, 28, 0,
		0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 9, 0, 0, 0, 0, 200, 15, 95, 163, 28, 0, 0, 0, 20, 0, 0, 0, 11, 0, 0,
		0, 27, 0, 0, 0, 20, 0, 0, 0, 0, 200, 15, 95, 163, 28, 0, 0, 0, 36, 0, 0, 0, 27, 0, 0, 0, 45, 0, 0, 0, 36, 0, 0,
		0, 0, 200, 15, 95, 163, 28, 0, 0, 0, 54, 0, 0, 0, 45, 0, 0, 0, 113, 0, 0, 0, 54, 0, 0, 0, 113, 0, 0, 0, 101,
		120, 97, 109, 112, 108, 101, 95, 49, 50, 10, 101, 120, 97, 109, 112, 108, 101, 95, 50, 51, 46, 49, 52, 49, 53,
		10, 101, 120, 97, 109, 112, 108, 101, 95, 51, 34, 102, 111, 111, 98, 97, 114, 34, 10, 101, 120, 97, 109, 112,
		108, 101, 95, 52, 123, 34, 97, 34, 58, 49, 50, 51, 44, 34, 98, 34, 58, 52, 53, 54, 46, 55, 56, 57, 44, 34, 99,
		34, 58, 34, 99, 88, 100, 108, 99, 110, 82, 53, 34, 44, 34, 100, 34, 58, 34, 97, 115, 100, 102, 103, 104, 34,
		44, 34, 101, 34, 58, 116, 114, 117, 101, 125, 10, 0, 0,
	}
	t.Run("encode", func(t *testing.T) {
		ctx := NewCtx()
		ctx.SetClock(DummyClock{}).
			SetID("H8bqc4qGWqe42mb3").
			Log("example_1", 2).
			Log("example_2", 3.1415).
			Log("example_3", "foobar").
			Log("example_4", struct {
				A int32   `json:"a"`
				B float64 `json:"b"`
				C []byte  `json:"c"`
				D string  `json:"d"`
				E bool    `json:"e"`
			}{
				A: 123,
				B: 456.789,
				C: []byte("qwerty"),
				D: "asdfgh",
				E: true,
			})
		cb := Encode(ctx)
		if !bytes.Equal(cb, encoded) {
			t.FailNow()
		}
	})
}
